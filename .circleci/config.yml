# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2

defaults_working_directory: &defaults_working_directory
  working_directory: ~/repo

defaults_docker_node: &defaults_docker_node
  docker:
    - image: circleci/node

defaults_helm_node: &defaults_helm_node
  docker:
    - image: alpine/helm:2.13.1

defaults_Dependencies: &defaults_Dependencies
  name: Install default dependencies
  command: |
    apk --no-cache add git
    apk --no-cache add ca-certificates
    apk --no-cache add curl
    apk --no-cache add openssh-client
    apk add --no-cache -t build-dependencies make gcc g++ python libtool autoconf automake

defaults_helm_environment: &defaults_helm_environment
  name: Set default environment
  command: |
    echo "Initialising helm for local use only"
    helm init --client-only --skip-refresh
    echo "Adding repos necessary for publishing process"
    # helm repo add incubator http://storage.googleapis.com/kubernetes-charts-incubator
    # helm repo add kiwigrid https://kiwigrid.github.io

defaults_Environment: &defaults_environment
  environment:
    REACT_APP_BUNDLE: 'TRUE'

defaults_build_docker_login: &defaults_build_docker_login
  name: Login to Docker Hub
  command: |
    docker login -u $DOCKER_USER -p $DOCKER_PASS

defaults_build_docker_build: &defaults_build_docker_build
  name: Build Docker image
  command: |
    cd server
    docker build --no-cache --rm \
      -t modusbox/connection-manager-api:$IMAGE_TAG \
      -f Dockerfile \
      --build-arg API_BUILD=`date +%FT%T%z` \
      --build-arg API_COMMIT=`git rev-parse HEAD` \
      --build-arg API_DESCRIBE=`git describe --tags --always --long --dirty` .

defaults_build_docker_publish: &defaults_build_docker_publish
  name: Publish Docker image $IMAGE_TAG to Docker Hub
  command: |
    echo "Publishing modusbox/connection-manager-api:$IMAGE_TAG"
    docker push modusbox/connection-manager-api:$IMAGE_TAG

jobs:

  build:
    <<: *defaults_working_directory
    <<: *defaults_docker_node
    <<: *defaults_environment

    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: setup environment vars for SNAPSHOT release
          command: |
            echo 'export IMAGE_TAG=$(echo $CIRCLE_TAG | tr -d v)' >> $BASH_ENV
      - run:
          <<: *defaults_build_docker_login
      - run:
          <<: *defaults_build_docker_build
      - run:
          <<: *defaults_build_docker_publish
  
  deploychart:
    
    <<: *defaults_helm_node
    <<: *defaults_working_directory

    steps:
      - add_ssh_keys:
          fingerprints:
            - "25:5e:83:52:81:f2:1d:56:32:50:c9:ed:ce:05:4a:90"
      - run:
          <<: *defaults_Dependencies
      - run:
          <<: *defaults_helm_environment
      - checkout

      - run:
          name: build and push helm charts
          command: | 
            export HELM_TAG=$(echo $CIRCLE_TAG | tr -d h)
            cd helm/mcm-api
            sh package.sh $HELM_TAG
            mkdir -p ~/repo/branch
            GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no" git clone $CIRCLE_REPOSITORY_URL ~/repo/branch
            cd ~/repo/branch
            git checkout gh-pages || git checkout --orphan gh-pages
            git rm -rf .
            cd -
            cp -r repo ../../.circleci/ ~/repo/branch
            cd ~/repo/branch
            git add -A
            git config --global user.email "cicd@modusbox.com"
            git config --global user.name "CICI at ModusBox"
            git commit -m "Automated deployment to GitHub Pages" --allow-empty
            GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no" git push origin gh-pages

workflows:
  version: 2
  build_and_publish:
    jobs:
      - build:
          # context: org-global
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - /.*/
      - deploychart:
          # context: org-global
          filters:
            tags:
              only: /^h.*/
            branches:
              ignore:
                - /.*/
                - gh-pages
